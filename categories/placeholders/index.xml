<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Placeholders on XploR Eos IDE</title>
    <link>http://localhost:1313/categories/placeholders/</link>
    <description>Recent content in Placeholders on XploR Eos IDE</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="http://localhost:1313/categories/placeholders/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Build and Quick Debug Projects</title>
      <link>http://localhost:1313/docs/project-n-build/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/project-n-build/</guid>
      <description>&lt;!-- &#xA;&#xA;&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;&#xA;&lt;p&gt;This is a placeholder page that shows you how to use this template site.&lt;/p&gt;&#xA;&#xA;&lt;/div&gt;&#xA; --&gt;&#xA;&lt;p&gt;This chapter outlines the project&amp;rsquo;s development and build environment. It guides creating, managing, building, and quickly debugging projects. Additionally, it highlights the features available for tailoring the build environment to meet specific needs, enabling swift customization and initiating debugging through a single widget.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Example Demo</title>
      <link>http://localhost:1313/docs/example-demo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/example-demo/</guid>
      <description>&lt;!-- &#xA;&#xA;&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;&#xA;&lt;p&gt;This is a placeholder page that shows you how to use this template site.&lt;/p&gt;&#xA;&#xA;&lt;/div&gt;&#xA; --&gt;&#xA;&lt;p&gt;In this version, XploR IDE supports 3 types of examples:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Baremetal Example&lt;/li&gt;&#xA;&lt;li&gt;Embedded Linux Example&lt;/li&gt;&#xA;&lt;li&gt;RTOS Example (include: FreeRTOS)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Before going into each specific example, make sure you read the &lt;a href=&#34;http://localhost:1313/docs/project-n-build/5.1_managing_projects/#512-working-with-projects&#34;&gt;5.1.2 Working with Project&lt;/a&gt; to understand the general workflow for creating, building, running, and debugging projects or applications.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Baremetal Example</title>
      <link>http://localhost:1313/docs/example-demo/baremetal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/example-demo/baremetal/</guid>
      <description></description>
    </item>
    <item>
      <title>GNU C/C&#43;&#43; Helloworld</title>
      <link>http://localhost:1313/docs/example-demo/baremetal/gnu-c-cpp-helloworld/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/example-demo/baremetal/gnu-c-cpp-helloworld/</guid>
      <description>&lt;p&gt;This chapter covers the basics of C/C++ embedded projects including creating, building, running, and debugging baremetal applications. The project referred to in this chapter is called &amp;ldquo;Hello World.&amp;rdquo; This application prints &amp;ldquo;Hello World&amp;rdquo; text and runs a simple for-loop as a simple demonstration. The application can also be built and run on QEMU emulator.&lt;/p&gt;&#xA;&lt;h2 id=&#34;components-prerequisites&#34;&gt;Components Prerequisites&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#components-prerequisites&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;baremetal-virt-qemu-helloworld-example&lt;/strong&gt;: Hello World C Baremetal Project for running on QEMU&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;baremetal-virt-qemu-helloworld-cpp-example&lt;/strong&gt;: Hello World C++ Baremetal Project for running on QEMU&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;xplor-studio-baremetal-debug-plugin&lt;/strong&gt;: ELF XploR Studio Plugin using for creating baremetal examples&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;rv-xplor-elf-linux64/rv-xplor-elf-win64&lt;/strong&gt;: XploR Embedded Toolchain for RISC-V (supported both 32 and 64-bit)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;rv-qemu-linux64/rv-qemu-win64&lt;/strong&gt;: QEMU for running and debugging RISC-V applications (Baremetal, Embedded, Embedded Linux)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;To build, run and debug GNU Helloworld applications, please make sure that all above components are installed. Please refer to &lt;a href=&#34;http://localhost:1313/docs/project-n-build/5.1_managing_projects/#5121-install-a-template&#34;&gt;5.1.2.1 Install a Template&lt;/a&gt; for more information about installing component.&lt;/p&gt;</description>
    </item>
    <item>
      <title>LLVM Helloworld</title>
      <link>http://localhost:1313/docs/example-demo/baremetal/llvm-helloworld/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/example-demo/baremetal/llvm-helloworld/</guid>
      <description>&lt;p&gt;This chapter covers the basics of C embedded projects including creating, building, running, and debugging baremetal applications. The project referred to in this chapter is called &amp;ldquo;Hello World.&amp;rdquo; This application prints &amp;ldquo;Hello World&amp;rdquo; text and runs a simple for-loop as a simple demonstration. The application can also be built and run on QEMU emulator.&lt;/p&gt;&#xA;&lt;h2 id=&#34;components-prerequisites&#34;&gt;Components Prerequisites&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#components-prerequisites&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;baremetal-virt-qemu-helloworld-llvm-example&lt;/strong&gt;: Hello World Baremetal (LLVM) Project for running on QEMU&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;xplor-studio-baremetal-debug-plugin&lt;/strong&gt;: ELF XploR Studio Plugin using for creating baremetal examples&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;rv-xplor-clang-linux64/rv-xplor-clang-win64&lt;/strong&gt;: XploR Embedded LLVM toolchain for RISC-V (support both 32 and 64-bit)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;rv-qemu-linux64/rv-qemu-win64&lt;/strong&gt;: QEMU for running and debugging RISC-V applications (Baremetal, Embedded, Embedded Linux)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;To build, run and debug LLVM Helloworld applications, please make sure that all above components are installed. Please refer to &lt;a href=&#34;http://localhost:1313/docs/project-n-build/5.1_managing_projects/#5121-install-a-template&#34;&gt;5.1.2.1 Install a Template&lt;/a&gt; for more information about installing component.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Remote Feature</title>
      <link>http://localhost:1313/docs/remote-feature/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/remote-feature/</guid>
      <description>&lt;p&gt;This section guides users on how to connect to the cloud service and utilize its features independently.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Connecting to the Cloud from the IDE&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Key Feature: Remote Debugging and Usage Instructions&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;71-xplor-labs&#34;&gt;7.1 XploR Labs&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#71-xplor-labs&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h1&gt;&#xA;&lt;p&gt;XploR Labs is an extension that enables users to connect to their cloud workspaces and access them remotely from a local machine.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Step to connect:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Click to &lt;strong&gt;XploR Labs&lt;/strong&gt; icon in the &lt;strong&gt;Activity Bar&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/remote-feature/remote-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
