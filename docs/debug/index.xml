<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Debug Project on XploR Eos IDE</title>
    <link>http://localhost:1313/docs/debug/</link>
    <description>Recent content in Debug Project on XploR Eos IDE</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="http://localhost:1313/docs/debug/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Debug Configuration</title>
      <link>http://localhost:1313/docs/debug/debug-configuration/</link>
      <pubDate>Mon, 14 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/debug/debug-configuration/</guid>
      <description>&lt;p&gt;A debug configuration is usually defined in a launch.json file, which specifies how the debugger connects to the program being debugged, along with any specific parameters or conditions for the debug session. The file is typically auto-generated but can be manually modified for more complex debugging scenarios, such as loading symbols only or configuring multiple launch tasks. This configuration is usually generated automatically by the IDE and saved in a JSON file names &lt;code&gt;launch.json&lt;/code&gt; within &lt;code&gt;.theia&lt;/code&gt; folder in your workspace.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Debug Application</title>
      <link>http://localhost:1313/docs/debug/debug-application/</link>
      <pubDate>Tue, 15 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/debug/debug-application/</guid>
      <description>&lt;p&gt;&lt;strong&gt;XploR Eos IDE&lt;/strong&gt; provides an integrated Debug View, where users can start, stop, and control the debugging process, view variables, and monitor the call stack. Additionally, multiple data views give a comprehensive overview by revealing the status of different subsystems of the target. This section outlines some of these views and features.&lt;/p&gt;&#xA;&lt;p&gt;The debug behavior will differ depending on whether an Automatic or Manual debug launch is performed.&lt;/p&gt;&#xA;&lt;p&gt;For an Automatic debug launch, you will switch from the Explorer to the Debug view in the Side Bar, displaying the default arrangement of views as shown below. The Call Stack view provides information on the current program. In the source code view, the program is usually displayed as halted at the beginning of the &lt;code&gt;main()&lt;/code&gt; function (though this may vary depending on the loaded program). Below the &lt;strong&gt;Threads, Call Stack View, the Variables, Watch, Breakpoint&lt;/strong&gt; are also available.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Advanced Debug</title>
      <link>http://localhost:1313/docs/debug/advanced-debug/</link>
      <pubDate>Tue, 15 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/debug/advanced-debug/</guid>
      <description>&lt;h2 id=&#34;bitfile-programming&#34;&gt;Bitfile Programming&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#bitfile-programming&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;This feature allows you to detect the connected FPGA board, core, vendor, bitfile. It streamlines the process of programming an FPGA device by automating the detection of necessary components and providing a user-friendly interface for initating programming operations.&lt;/p&gt;&#xA;&lt;p&gt;Usage Instructions&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Install Prerequisites&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Ensure that all necessary components and drivers are installed for your FPGA board and JTAG cable.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Connect the FPGA Board&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Connect the FPGA board to your computer using a JTAG cable.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
