<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Debug on XploR Eos IDE</title>
    <link>http://localhost:1313/docs/debug/</link>
    <description>Recent content in Debug on XploR Eos IDE</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="http://localhost:1313/docs/debug/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Launching a Debug Session</title>
      <link>http://localhost:1313/docs/debug/debug_projects/</link>
      <pubDate>Thu, 26 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/debug/debug_projects/</guid>
      <description>&lt;p&gt;Xplor IDE support for debug projects currently in Xplorer, this section will guide you on how to start debugging in Xplorer, for more complete information about debugging features, debugging steps as well as debug configuration, please see in the next section.&lt;/p&gt;&#xA;&lt;h2 id=&#34;launching-a-debug-session&#34;&gt;Launching a Debug Session&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#launching-a-debug-session&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;There are several ways to start a debug session in &lt;strong&gt;XploR Eos IDE&lt;/strong&gt;:&lt;/p&gt;&#xA;&lt;p&gt;First of all, ensure the project is built. For building instructions, see &lt;a href=&#34;http://localhost:1313/docs/project-n-build/building_projects/#build-project&#34;&gt;Building the Project&lt;/a&gt; section.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Debugging the Application</title>
      <link>http://localhost:1313/docs/debug/debug-application/</link>
      <pubDate>Tue, 15 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/debug/debug-application/</guid>
      <description>&lt;p&gt;&lt;strong&gt;XploR Eos IDE&lt;/strong&gt; provides an integrated Debug View, where users can start, stop, and control the debugging process, view variables, and monitor the call stack. Additionally, multiple data views give a comprehensive overview by revealing the status of different subsystems of the target. This section outlines some of these views and features.&lt;/p&gt;&#xA;&lt;p&gt;When you will switch from the &lt;strong&gt;Xplorer&lt;/strong&gt; to the &lt;strong&gt;Debug&lt;/strong&gt; view in the Side Bar, displaying the default arrangement of views as shown below. The &lt;strong&gt;Call Stack&lt;/strong&gt; provides information on the current program. In the source code view, the program is usually displayed as halted at the beginning of the &lt;code&gt;main()&lt;/code&gt; function (though this may vary depending on the loaded program). Below the &lt;strong&gt;Threads, Call Stack, Variables, Watch, Breakpoints&lt;/strong&gt; are also available.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Debug Configuration</title>
      <link>http://localhost:1313/docs/debug/debug-configuration/</link>
      <pubDate>Mon, 14 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/debug/debug-configuration/</guid>
      <description>&lt;p&gt;A debug configuration is a set of properties defined in a launch.json file. It specifies how the debugger interacts with the program being debugged and includes the necessary parameters for a debugging session.&lt;/p&gt;&#xA;&lt;p&gt;The IDE typically generates a default &lt;code&gt;launch.json&lt;/code&gt; file automatically when a project is created using our template. the &lt;code&gt;launch.json&lt;/code&gt; file is saved in the &lt;code&gt;.theia&lt;/code&gt; folder within your workspace directory.&lt;/p&gt;&#xA;&lt;p&gt;You can easily access the &lt;code&gt;launch.json&lt;/code&gt; file by clicking the &lt;strong&gt;Open launch.json&lt;/strong&gt; button in the Debug View.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
